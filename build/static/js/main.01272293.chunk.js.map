{"version":3,"sources":["components/Expenses/ExpensesFilter.jsx","components/Expenses/ExpenseDate.jsx","components/UI/Card.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpensesList.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpensesChart.jsx","components/Expenses/Expenses.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.jsx","index.js"],"names":["ExpensesFilter","props","className","value","year","onChange","e","onYearChange","target","ExpenseDate","day","date","toLocaleString","month","getFullYear","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","setYear","filteredExpenses","filter","toString","ExpenseForm","setTitle","setAmount","setDate","expanded","setExpanded","expandToggle","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","class","onClick","NewExpense","expenseDataInput","random","onAddExpense","FAKE_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01272293.chunk.js","sourcesContent":["import './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const yearChangeHandler = e => {\r\n        props.onYearChange(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"expenses-filter\">\r\n            <div className=\"expenses-filter__control\">\r\n                <label>Filter by year</label>\r\n                <div className=\"select-wrapper\">\r\n                    <select value={props.year} onChange={yearChangeHandler}>\r\n                        <option value=\"2022\">2022</option>\r\n                        <option value=\"2021\">2021</option>\r\n                        <option value=\"2020\">2020</option>\r\n                        <option value=\"2019\">2019</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n    const day = props.date.toLocaleString(\"en\", { day: \"2-digit\" });\r\n    const month = props.date.toLocaleString(\"en\", { month: \"long\" });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__day'>{day}</div>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__year'>{year}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import './Card.css';\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className\r\n\r\n    return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import ExpenseDate from './ExpenseDate';\r\nimport Card from \"../UI/Card\";\r\nimport './ExpenseItem.css';\r\n\r\nfunction ExpenseItem(props) {\r\n    return (\r\n        <li>\r\n            <Card className='expense-item'>\r\n                <ExpenseDate date={props.date} />\r\n                <div className='expense-item__description'>\r\n                    <h2>{props.title}</h2>\r\n                    <div className='expense-item__price'>{props.amount}â‚¬</div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = props => {\r\n    if (props.items.length === 0)  {\r\n        return <h2 className=\"expenses-list__fallback\">No expenses found in {props.year}</h2>\r\n    }\r\n\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {props.items.map((expense) => (\r\n            <ExpenseItem\r\n                key={expense.id}\r\n                title={expense.title}\r\n                amount={expense.amount}\r\n                date={expense.date}\r\n            />\r\n        ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ExpensesList","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChartBar","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n    \r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map((dataPoint) => (\r\n                <ChartBar\r\n                    key={dataPoint.label}\r\n                    value={dataPoint.value}\r\n                    maxValue={totalMaximum}\r\n                    label={dataPoint.label}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0},\r\n        { label: 'Feb', value: 0},\r\n        { label: 'Mar', value: 0},\r\n        { label: 'Apr', value: 0},\r\n        { label: 'May', value: 0},\r\n        { label: 'Jun', value: 0},\r\n        { label: 'Jul', value: 0},\r\n        { label: 'Aug', value: 0},\r\n        { label: 'Sep', value: 0},\r\n        { label: 'Oct', value: 0},\r\n        { label: 'Nov', value: 0},\r\n        { label: 'Dec', value: 0}\r\n    ]\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); // starting at 0... January => 0\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    // props.expenses.forEach(expense => {\r\n    //     const expenseMonth = expense.date.getMonth(); // starting at 0... January => 0\r\n    //     chartDataPoints[expenseMonth].value += expense.amount;\r\n    // }) \r\n\r\n    return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport Card from '../UI/Card';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nimport './Expenses.css';\r\n\r\nimport { useState } from 'react';\r\n\r\nfunction Expenses(props) {\r\n    const [year, setYear] = useState('2021');\r\n\r\n    const changeYear = (year) => setYear(year);\r\n\r\n    const filteredExpenses = props.items.filter((expense) => {\r\n        const expenseYear = expense.date.getFullYear().toString();\r\n        return expenseYear === year;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"expenses\">\r\n                <ExpensesFilter year={year} onYearChange={changeYear} />\r\n                <ExpensesChart expenses={filteredExpenses} />\r\n                <ExpensesList items={filteredExpenses} year={year} />\r\n\r\n                {/* {filteredExpenses.length === 0 && <p>No expenses in {year}.</p>}\r\n                {filteredExpenses.length > 0 &&\r\n                    filteredExpenses.map((expense) => (\r\n                        <ExpenseItem\r\n                            key={expense.id}\r\n                            title={expense.title}\r\n                            amount={expense.amount}\r\n                            date={expense.date}\r\n                        />\r\n                    ))} */}\r\n\r\n                {/* {filteredExpenses.length === 0 ? (\r\n                    <p>No expenses in {year}.</p>\r\n                ) : (\r\n                    filteredExpenses.map((expense) => (\r\n                        <ExpenseItem\r\n                            key={expense.id}\r\n                            title={expense.title}\r\n                            amount={expense.amount}\r\n                            date={expense.date}\r\n                        />\r\n                    ))\r\n                )} */}\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Expenses;\r\n","import './ExpenseForm.css';\r\nimport { useState } from 'react';\r\n\r\nconst ExpenseForm = (props) => {\r\n    /**** Managing states ****/\r\n    const [title, setTitle] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [date, setDate] = useState('');\r\n\r\n    const titleChangeHandler = (e) => setTitle(e.target.value);\r\n    const amountChangeHandler = (e) => setAmount(e.target.value);\r\n    const dateChangeHandler = (e) => setDate(e.target.value);\r\n\r\n    const [expanded, setExpanded] = useState(false);\r\n    const expandToggle = () => setExpanded(!expanded);\r\n\r\n    /**** Alternative approach to manage multiple states ****/\r\n\r\n    // const [userInput, setUserInput] = useState({\r\n    //   title: '',\r\n    //   amount: '',\r\n    //   date: ''\r\n    // });\r\n\r\n    //  const titleChangeHandler = e => {\r\n    //   setUserInput(prevState => {\r\n    //     return { ...prevState, title: e.target.value }\r\n    //   })\r\n    // };\r\n\r\n    // const amountChangeHandler = e => {\r\n    //   setUserInput(prevState => {\r\n    //     return { ...prevState, amount: e.target.value }\r\n    //   })\r\n    // };\r\n\r\n    // const dateChangeHandler = e => {\r\n    //   setUserInput(prevState => {\r\n    //     return { ...prevState, date: e.target.value }\r\n    //   })\r\n    // };\r\n\r\n    /**** Submitting the form ****/\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const expenseData = {\r\n            title,\r\n            amount: +amount,\r\n            date: new Date(date),\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n\r\n        setTitle('');\r\n        setAmount('');\r\n        setDate('');\r\n\r\n        expandToggle();\r\n    };\r\n\r\n    if (!expanded) {\r\n        return <button class=\"btn-primary\" onClick={expandToggle}>Add New Expense</button>;\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={title}\r\n                        onChange={titleChangeHandler}\r\n                    />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        min=\"0.01\"\r\n                        step=\"0.01\"\r\n                        value={amount}\r\n                        onChange={amountChangeHandler}\r\n                    />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        min=\"2019-01-01\"\r\n                        max=\"2022-12-31\"\r\n                        value={date}\r\n                        onChange={dateChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button class=\"btn-danger\" onClick={expandToggle}>Cancel</button>\r\n                <button type=\"submit\" class=\"btn-success\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = (props) => {\r\n    const saveExpenseDataHandler = expenseDataInput => {\r\n        const expenseData = {\r\n            ...expenseDataInput,\r\n            id: Math.random().toString()\r\n        };\r\n\r\n        props.onAddExpense(expenseData);\r\n\r\n        // console.log(expenseData);\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NewExpense;","import Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nimport { useState } from 'react';\r\n\r\nconst FAKE_EXPENSES = [\r\n    {\r\n        id: \"e1\",\r\n        title: \"Toilet Paper\",\r\n        amount: 94.12,\r\n        date: new Date(2020, 7, 14),\r\n    },\r\n    {\r\n        id: \"e2\",\r\n        title: \"New TV\",\r\n        amount: 799.49,\r\n        date: new Date(2021, 2, 12),\r\n    },\r\n    {\r\n        id: \"e3\",\r\n        title: \"Car Insurance\",\r\n        amount: 294.67,\r\n        date: new Date(2021, 2, 28),\r\n    },\r\n    {\r\n        id: \"e4\",\r\n        title: \"New Desk (Wooden)\",\r\n        amount: 450,\r\n        date: new Date(2021, 5, 12),\r\n    },\r\n];\r\n\r\nfunction App() {\r\n    const [expenses, setExpenses] = useState(FAKE_EXPENSES);\r\n\r\n    const addExpenseHandler = expense => {\r\n        /**** \"Easy way\" to update state */\r\n        // setExpenses([expense, ...expenses]); \r\n\r\n        /**** Better way when updating state with previous state snapshot */\r\n        setExpenses(prevExpenses => [expense, ...prevExpenses]);\r\n    }\r\n\r\n    /***** JXS under the hood mechanism *****/ \r\n        // import React from 'react';\r\n\r\n        // return React.createElement(\r\n        //     'div',\r\n        //     {},\r\n        //     React.createElement('h2', {}, \"Let's get started!\"),\r\n        //     React.createElement(Expenses, { item: expenses })\r\n        // );\r\n\r\n    return (\r\n        <div>\r\n            <NewExpense onAddExpense={addExpenseHandler} />\r\n            <Expenses items={expenses} />\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}